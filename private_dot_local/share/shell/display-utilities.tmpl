#!/bin/bash
# Utility functions for display (output, monitor) management.

# Return the list of possible outputs (connected or not).
# Usage: all_outputs_except OUTPUT
if [[ "$XDG_SESSION_DESKTOP" =~ sway ]]; then
    all_outputs_except()
    {
        # TODO: Implement for sway
        # Use /sys/class/drm/*?
        EXCLUDE="$1"
        xrandr | grep connected | cut --delimiter=' ' --field=1 | grep -v -e "\<$EXCLUDE\>"
    }
else
    all_outputs_except()
    {
        EXCLUDE="$1"
        xrandr | grep connected | cut --delimiter=' ' --field=1 | grep -v -e "\<$EXCLUDE\>"
    }
fi

# Return the list of connected outputs.
# Usage: connected_display
if [[ "$XDG_SESSION_DESKTOP" =~ sway ]]; then
    connected_displays()
    {
        # swaymsg --pretty -t get_outputs | grep 'Output' | cut --delimiter=' ' --field=2
        swaymsg --raw -t get_outputs | jq '. [] | (.name)' | sed -e 's/"//g'
    }
else
    connected_displays()
    {
        xrandr | grep -v disconnected | grep connected | cut --delimiter=' ' --field=1
    }
fi

# Return the list of connected outputs.
# Usage: all_connected_outputs_except OUTPUT
all_connected_outputs_except()
{
    EXCLUDE="$1"
    connected_displays | grep -v -e "\<$EXCLUDE\>"
}

# Usage: best_connected OUT1 OUT2 ...
# Return the first connected output from the input list
best_connected()
{
    CONNECTED_OUTPUTS=$(connected_displays)
    CANDIDATE_OUTPUTS="$@"
    for OUTPUT in $(echo $CONNECTED_OUTPUTS | tr '\n' ' '); do
        RE=\\b$OUTPUT\\b
        if [[ $CANDIDATE_OUTPUTS =~ $RE ]]; then
            # If $OUTPUT in $CANDIDATE_OUTPUTS, bash regular expression
            echo "$OUTPUT"
            return 0
        fi
    done
    return 1
}
