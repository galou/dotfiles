#!/bin/bash
# Shows a notification for the mute state of the given PulseAudio source.
# Usage notify-mic-status source.
# Source can be given as index or name.
#
# Dependency: Python 3
# Python dependency: pulsectl.

NOTIFY_TIMEOUT_MS=2000

if [[ -z "$1" ]]; then
    SINK=0
else
    SINK="$1"
fi

python3 << EOF
import pulsectl


def index(index_or_name: str):
    """Return the index or exit with return code 2."""
    # Try as index.
    indexes = [s.index for s in pulse.source_list()]
    try:
        idx = int(index_or_name)
    except ValueError:
        pass
    else:
        if idx in indexes:
            return idx
        else:
            exit(2)

    # Not an index, try as name.
    sources = [s.name for s in pulse.source_list()]
    try:
        return indexes[sources.index(index_or_name)]
    except ValueError:
        exit(2)


with pulsectl.Pulse('notify-mic-status') as pulse:
    try:
        if pulse.source_info(index('''${SINK}''')).mute:
            exit(1)
        else:
            exit(0)
    except pulsectl.pulsectl.PulseIndexError:
        exit(2)
EOF

if [[ $? = 2 ]]; then
    exit 1
fi

if [[ $? = 1 ]]; then
    notify-send \
        --expire-time=$NOTIFY_TIMEOUT_MS \
        --icon=$HOME/.local/share/icons/microphone-sensitivity-muted-symbolic.svg \
        --app-name=notify-mic-status \
        --urgency=low \
        --category=device \
        "Microphone muted"
else
    notify-send \
        --expire-time=$NOTIFY_TIMEOUT_MS \
        --icon=$HOME/.local/share/icons/microphone-sensitivity-medium-symbolic.svg \
        --app-name=notify-mic-status \
        --urgency=low \
        --category=device \
        "Microphone unmuted"
fi
